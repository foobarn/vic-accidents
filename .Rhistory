a = read_csv('data/raw/ACCIDENT/ACCIDENT_EVENT.csv')
b = read_csv('data/raw/2000 TO 2005 ACCIDENT/ACCIDENT_EVENT.CSV')
rbind(a,b) %>%
rename_with(tolower, ) %>%
rename_with(~gsub(' ', '_', .))
}
get_event_summary = function(){
df_event = get_event()
# get count of events, and type of first event for
# each accident
df_event_smry = df_event %>%
group_by(accident_no) %>%
summarise(no_of_events=n()) %>%
left_join(
df_event %>%
filter(event_seq_no==1) %>%
group_by(accident_no) %>%
summarise(event_type=min(event_type)),
by=c('accident_no'='accident_no')
) %>%
left_join(
df_event %>%
select(event_type, event_type_desc) %>%
distinct(),
by=c('event_type'='event_type'))
df_event_smry
df_has_obj = df_event %>%
filter(!object_type_desc %in% c('Not Applicable', 'Unknown'))
# get count of objects and details of first object
# where applicable
df_obj_smry = df_has_obj %>%
group_by(accident_no) %>%
summarise(no_of_objs=n()) %>%
left_join(
df_has_obj %>%
group_by(accident_no) %>%
summarise(object_type=min(object_type)),
by=c('accident_no'='accident_no')
) %>%
left_join(
df_has_obj %>%
select(object_type, object_type_desc) %>%
distinct(),
by=c('object_type'='object_type'))
df_event_smry %>%
left_join(df_obj_smry, by=c('accident_no'='accident_no'))
}
get_node = function(){
a = read_csv('data/raw/ACCIDENT/NODE.csv') %>%
rename_with(tolower, ) %>%
rename_with(~gsub(' ', '_', .)) %>%
select(accident_no, node_id, node_type, node_type, lat, long)
b = read_csv('data/raw/2000 TO 2005 ACCIDENT/NODE.csv') %>%
rename_with(tolower, ) %>%
rename_with(~gsub(' ', '_', .)) %>%
select(accident_no, node_id, node_type, node_type, lat, long)
# ensure we only have one entry for each node_id
rbind(a,b) %>%
group_by(node_id) %>%
summarise(node_type=max(node_type),lat=median(lat),long=median(long))
}
process_data_from_rstudio = function(){
# uses the above funcs to get our data into the processed folder
# use r studio api to set working dir to script location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
accident_df = get_accident()
df_events = get_event_summary()
accident_df = accident_df %>%
left_join(df_events, by=c('accident_no'='accident_no'))
# get stats for each node
node_stats = accident_df %>%
group_by(node_id) %>%
summarise(
n_accidents_at_node=n(),
n_inj_at_node=sum(no_persons_inj_2+no_persons_inj_3),
n_deaths_at_node=sum(no_persons_killed),
fatal = n_deaths_at_node>0) %>%
mutate(casualties_at_node = n_inj_at_node+n_deaths_at_node)
node_df = get_node() %>%
left_join(node_stats, by=c('node_id'='node_id'))
accident_df %>% write_delim('data/processed/accidents.csv',delim=',')
node_df  %>%  write_delim('data/processed/nodes.csv',delim=',')
# get the first accident for each node, which we will use
# in our model to predict future accidents
first_accident_date=accident_df %>%
filter(node_id>0) %>%
group_by(node_id) %>%
summarise(accidentdate=min(accidentdate)) %>%
inner_join(accident_df, by=c('node_id'='node_id','accidentdate'='accidentdate'))
first_accident = first_accident_date %>%
group_by(node_id) %>%
summarise(accidenttime=min(accidenttime)) %>%
inner_join(first_accident_date, by=c('node_id'='node_id','accidenttime'='accidenttime'))
first_accident = first_accident %>%
left_join(node_df , on=c('node_id'='node_id')) %>%
select(
node_id,
accidentdate,
accidenttime,
accident_type,
day_of_week,
dca_code,
light_condition,
no_of_vehicles,
no_persons,
no_persons_inj_2,
no_persons_inj_3,
no_persons_killed,
police_attend,
road_geometry,
severity,
n_injured_t,
casualties,
no_of_events,
no_of_objs,
object_type,
lat,
long,
n_accidents_at_node,
n_inj_at_node,
n_deaths_at_node,
casualties_at_node,
fatal) %>%
mutate(fatal = as.numeric(fatal)) %>%
mutate(
no_of_objs = replace_na(no_of_objs, 0),
object_type = as.numeric( replace_na(object_type, 0)))
first_accident %>% write_delim('data/processed/node-first-accident.csv',delim=',')
}
process_data_from_rstudio()
df_accidents = read_csv('data/processed/accidents.csv')
df_nodes = read_csv('data/processed/nodes.csv')
df_accidents
df_nodes
df_nodes %>% ggplot(aes(x= casualties_at_node)) +
geom_histogram()
df_nodes %>% ggplot(aes(x= casualties_at_node)) +
geom_bar(stat='identity'
)
df_nodes %>% ggplot(aes(x= casualties_at_node)) +
geom_col(
)
df_nodes %>% ggplot(aes(x= casualties_at_node)) +
geom_bar()
df_nodes %>% ggplot(aes(x= n_accidents_at_node)) +
geom_bar()
df_nodes %>%
mutate(multiple_accidents=n_accidents_at_node>1) %>%
group_by(multiple_accidents) %>%
summarise(n=n())
df_nodes %>%
mutate(multiple_accidents=n_accidents_at_node>1) %>%
group_by(multiple_accidents) %>%
summarise(n_accidents=n(), n_casualties=sum(n_casualties))
df_nodes %>%
mutate(multiple_accidents=n_accidents_at_node>1) %>%
group_by(multiple_accidents) %>%
summarise(n_nodes=n(),n_accidents_at_node=sum(n_accidents_at_node), n_casualties=sum(casualties_at_node))
df_nodes %>%
mutate(multiple_accidents=n_accidents_at_node>1) %>%
group_by(multiple_accidents) %>%
summarise(n_nodes=n(),n_accidents=sum(n_accidents_at_node), n_casualties=sum(casualties_at_node), n_fatalities=sum(n_deaths_at_node))
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(readr)
library(stringr)
library(lubridate)
library(ggplot2)
library(plotly)
df_accidents = read_csv('data/processed/accidents.csv')
df_nodes = read_csv('data/processed/nodes.csv')
df_accidents
df_nodes
# get the first accident for each node
first_accident_date=df_accidents %>%
filter(node_id>0) %>%
group_by(node_id) %>%
summarise(accidentdate=min(accidentdate)) %>%
inner_join(df_accidents, by=c('node_id'='node_id','accidentdate'='accidentdate'))
first_accident = first_accident_date %>%
group_by(node_id) %>%
summarise(accidenttime=min(accidenttime)) %>%
inner_join(first_accident_date, by=c('node_id'='node_id','accidenttime'='accidenttime'))
first_accident = first_accident %>%
left_join(df_nodes, on=c('node_id'='node_id')) %>%
select(
node_id,
accidentdate,
accidenttime,
accident_type,
day_of_week,
dca_code,
light_condition,
no_of_vehicles,
no_persons,
no_persons_inj_2,
no_persons_inj_3,
no_persons_killed,
police_attend,
road_geometry,
severity,
n_injured_t,
casualties,
no_of_events,
no_of_objs,
object_type,
lat,
long,
n_accidents_at_node,
n_inj_at_node,
n_deaths_at_node,
casualties_at_node,
fatal) %>%
mutate(fatal = as.numeric(fatal)) %>%
mutate(
no_of_objs = replace_na(no_of_objs, 0),
object_type = as.numeric( replace_na(object_type, 0)))
first_accident %>% write
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(readr)
library(stringr)
library(lubridate)
library(ggplot2)
library(plotly)
df_accidents = read_csv('data/processed/accidents.csv')
df_nodes = read_csv('data/processed/nodes.csv')
df_accidents
df_nodes
# Check out different accident types
dfB = df_accidents %>%
group_by(accident_type_desc) %>%
summarise(
n_accidents=n(),
injuries = sum(n_injured_t),
fatalites = sum(no_persons_killed)) %>%
pivot_longer(cols=c(injuries,fatalites),names_to='severity') %>%
mutate(rate=value/n_accidents)
dfB
dfB %>%
select(accident_type_desc, n_accidents) %>%
distinct() %>%
ggplot(aes(x=accident_type_desc, y=n_accidents)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Accidents by accident type")
dfB %>%
ggplot(aes(x=accident_type_desc, y=value, fill=severity)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("casualties by accident type")
dfB %>%
filter(severity=='fatalites') %>%
ggplot(aes(x=accident_type_desc, y=value)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatalities by accident type")
dfB %>%
filter(severity=='fatalites') %>%
ggplot(aes(x=accident_type_desc, y=rate)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatality rate accident type")
# Check road geom
dfB = df %>%
group_by(road_geometry_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
# Check road geom
dfB = df_accidents %>%
group_by(road_geometry_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
dfB %>%
ggplot(aes(x=road_geometry_desc, y=n_accidents)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Accidents by road_geometry_desc")
dfB %>%
ggplot(aes(x=road_geometry_desc, y=n_deaths)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Fatalities by road_geometry_desc")
dfB %>%
ggplot(aes(x=road_geometry_desc, y=fatality_rate)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatality to accident ratio by road_geometry_desc")
dfD = df_accidents %>%
filter(!is.na(object_type_desc)) %>%
group_by(object_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
dfD
df_accidents %>%
mutate(tree=object_type_desc=='Tree (shrub/scrub)') %>%
left_join(node_df, by=('node_id'='node_id'))
df_accidents %>%
mutate(tree=object_type_desc=='Tree (shrub/scrub)') %>%
left_join(df_node, by=('node_id'='node_id'))
df_accidents %>%
mutate(tree=object_type_desc=='Tree (shrub/scrub)') %>%
left_join(df_nodes, by=('node_id'='node_id'))
df_accidents %>%
mutate(
tree=case_when(
object_type_desc=='Tree (shrub/scrub)' ~ '1 Tree',
TRUE ~ '2 No Tree')) %>%
left_join(node_df, by=('node_id'='node_id')) %>%
ggplot(aes(x=long,y=lat,col=tree)) +
geom_point(size=.05)
df_accidents %>%
mutate(
tree=case_when(
object_type_desc=='Tree (shrub/scrub)' ~ '1 Tree',
TRUE ~ '2 No Tree')) %>%
left_join(df_nodes, by=('node_id'='node_id')) %>%
ggplot(aes(x=long,y=lat,col=tree)) +
geom_point(size=.05)
# fatal nodes
df_accidents %>%
mutate(
fatality=case_when(
object_type_desc=='Tree (shrub/scrub)' ~ '1 Tree',
TRUE ~ '2 No Tree')) %>%
left_join(df_nodes, by=('node_id'='node_id')) %>%
ggplot(aes(x=long,y=lat,col=tree)) +
geom_point(size=.05)
df_nodes %>%
mutate(deadly_node = case_when(
fatal ~ '1 Yes',
TRUE ~ '2 No')
) %>%
ggplot(aes(x=long,y=lat,col=deadly_node)) +
geom_point(size=.05)
dfJ = df %>%
group_by(road_geometry_desc, accident_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(
fatality_rate = n_deaths/n_accidents,
fatality_score=fatality_rate*n_deaths,
tool_tip = paste(
'n_accidents:',n_accidents,
'\nn_deaths:',n_deaths,
'\nfatality_rate',fatality_rate,
'\nfatality_score',fatality_score
)) %>%
arrange(-fatality_rate)
dfJ = df_accidents %>%
group_by(road_geometry_desc, accident_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(
fatality_rate = n_deaths/n_accidents,
fatality_score=fatality_rate*n_deaths,
tool_tip = paste(
'n_accidents:',n_accidents,
'\nn_deaths:',n_deaths,
'\nfatality_rate',fatality_rate,
'\nfatality_score',fatality_score
)) %>%
arrange(-fatality_rate)
dfJ
p = ggplot(dfJ, aes(road_geometry_desc, accident_type_desc, fill= fatality_score,text=tool_tip)) +
geom_tile() +
scale_fill_gradient(low="white", high="red") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatality_score by accident type and road geometry")
p
ggplotly(p,tooltip='tool_tip')
df_nodes %>%
mutate(multiple_accidents=n_accidents_at_node>1) %>%
group_by(multiple_accidents) %>%
summarise(n_nodes=n(),n_accidents=sum(n_accidents_at_node), n_casualties=sum(casualties_at_node), n_fatalities=sum(n_deaths_at_node))
dfJ = df_accidents %>%
group_by(road_geometry_desc, accident_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed),
n_casualties = sum(casualties)) %>%
mutate(
fatality_rate = n_deaths/n_accidents,
fatality_score=fatality_rate*n_deaths,
casualty_rate = n_casualties/n_accidents,
casualty_score = casualty_rate * n_casualties,
tool_tip = paste(
'n_accidents:',n_accidents,
'\nn_deaths:',n_deaths,
'\nfatality_rate',fatality_rate,
'\nfatality_score',fatality_score,
'\ncasualty_rate',casualty_rate,
'\ncasualty_score',casualty_score
)) %>%
arrange(-fatality_rate)
dfJ
p = ggplot(dfJ, aes(road_geometry_desc, accident_type_desc, fill= fatality_score,text=tool_tip)) +
geom_tile() +
scale_fill_gradient(low="white", high="red") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatality_score by accident type and road geometry")
p
p = ggplot(dfJ, aes(road_geometry_desc, accident_type_desc, fill= casualty_score,text=tool_tip)) +
geom_tile() +
scale_fill_gradient(low="white", high="red") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("casualty_score by accident type and road geometry")
p
# quick facts
df_accidents %>%
summarise(
accidents=n(),
nodes=distinct(node_id))
# quick facts
df_accidents %>%
summarise(
accidents=n(),
nodes=unique(node_id))
# quick facts
df_accidents %>%
summarise(
accidents=n(),
nodes=count(unique(node_id)))
# quick facts
df_accidents %>%
summarise(
accidents=n(),
nodes=length(unique(node_id)))
# quick facts
df_accidents %>%
summarise(
accidents=n(),
nodes=length(unique(node_id)),
induries=sum(n_injured_t),
deaths=sum(no_persons_killed))
dfD = df_accidents %>%
filter(!is.na(object_type_desc)) %>%
group_by(object_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
dfD
dfD = df_accidents %>%
filter(!is.na(object_type_desc)) %>%
group_by(object_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
dfD
dfB %>%
ggplot(aes(x=object_type_desc, y=n_accidents)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Accidents by object_type_desc")
dfD = df_accidents %>%
filter(!is.na(object_type_desc)) %>%
group_by(object_type_desc) %>%
summarise(
n_accidents=n(),
n_deaths = sum(no_persons_killed)) %>%
mutate(fatality_rate = n_deaths/n_accidents) %>%
arrange(-fatality_rate)
dfD
dfD %>%
ggplot(aes(x=object_type_desc, y=n_accidents)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Accidents by object_type_desc")
dfD %>%
ggplot(aes(x=object_type_desc, y=n_deaths)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Fatalities by object_type_desc")
dfD %>%
ggplot(aes(x=object_type_desc, y=fatality_rate)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("fatality to accident ratio by object_type_desc")
df_accidents %>%
mutate(
tree=case_when(
object_type_desc=='Tree (shrub/scrub)' ~ '1 Tree',
TRUE ~ '2 No Tree')) %>%
left_join(df_nodes, by=('node_id'='node_id')) %>%
ggplot(aes(x=long,y=lat,col=tree)) +
geom_point(size=.05) +
ggtitle("Location of accidents involving trees")
df_nodes %>%
mutate(deadly_node = case_when(
fatal ~ '1 Yes',
TRUE ~ '2 No')
) %>%
ggplot(aes(x=long,y=lat,col=deadly_node)) +
geom_point(size=.05) +
ggtitle("Sites of fatal accidents")
